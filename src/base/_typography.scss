// External Dependecies
@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@100;300;400;500;700;900&display=swap");

html {
    font-size: 0.625rem; // Equivalent to 10px with root font size 16px. (Allows code to be responsive to user defined font size)
    font-family: "Roboto", sans-serif;
}

h1,
.h1 {
    font-size: $text-h1-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

h2,
.h2 {
    font-size: $text-h2-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

h3,
.h3 {
    font-size: $text-h3-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

h4,
.h4 {
    font-size: $text-h4-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

h5,
.h5 {
    font-size: $text-h5-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

h6,
.h6 {
    font-size: $text-h6-size;
    padding: $text-padding;
    font-weight: $text-head-weight;
}

p,
.p {
    font-size: $text-p-size;
    padding: $text-padding;
}

a,
.a {
    @extend .p;
}

.text {
    // Text modifiers
    &-softer {
        color: $secondary;
        font-weight: 400;
    }

    &-important {
        font-size: $text-important-size;
        font-weight: $text-impact-weight;
    }

    &-lighter {
        font-weight: $text-light-weight;
    }

    &-toupper {
        text-transform: uppercase;
    }

    &-tolower {
        text-transform: lowercase;
    }

    &-tocapital {
        text-transform: capitalize;
    }

    // Text alignment
    &-justify {
        text-align: justify;
    }

    &-left {
        text-align: left;
    }

    &-center {
        text-align: center;
    }

    &-right {
        text-align: right;
    }

    // Overflow
    &-overflow {
        white-space: nowrap;
    }

    &-turncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    // Colours
    &-primary {
        color: $primary;
    }

    &-secondary {
        color: $secondary;
    }

    &-success {
        color: $success;
    }

    &-danger {
        color: $danger;
    }

    &-warning {
        color: $warning;
    }

    &-info {
        color: $info;
    }

    &-light {
        color: $light;
    }

    &-dark {
        color: $dark;
    }

    &-white {
        color: $white;
    }

    &-black {
        color: $black;
    }

    //Light Colours
    &-primary-light {
        color: $primary-light;
    }

    &-secondary-light {
        color: $secondary-light;
    }
    &-success-light {
        color: $success-light;
    }
    &-danger-light {
        color: $danger-light;
    }
    &-warning-light {
        color: $warning-light;
    }
    &-info-light {
        color: $info-light;
    }
    &-light-light {
        color: $light-light;
    }
    &-dark-light {
        color: $dark-light;
    }

    // Dark Colours
    &-primary-dark {
        color: $primary-dark;
    }

    &-secondary-dark {
        color: $secondary-dark;
    }
    &-success-dark {
        color: $success-dark;
    }
    &-danger-dark {
        color: $danger-dark;
    }
    &-warning-dark {
        color: $warning-dark;
    }
    &-info-dark {
        color: $info-dark;
    }
    &-light-dark {
        color: $light-dark;
    }
    &-dark-dark {
        color: $dark-dark;
    }
}

a {
    @extend .p;
    color: $primary;
    &:hover {
        color: darken($primary, 15%);
    }
    &:focus {
        color: darken($primary, 20%);
    }

    &.text-primary {
        &:hover {
            color: darken($primary, 15%);
        }
        &:focus {
            color: darken($primary, 20%);
        }
    }
    &.text-secondary {
        &:hover {
            color: darken($secondary, 15%);
        }
        &:focus {
            color: darken($secondary, 20%);
        }
    }
    &.text-success {
        &:hover {
            color: darken($success, 15%);
        }
        &:focus {
            color: darken($success, 20%);
        }
    }
    &.text-danger {
        &:hover {
            color: darken($danger, 15%);
        }
        &:focus {
            color: darken($danger, 20%);
        }
    }
    &.text-warning {
        &:hover {
            color: darken($warning, 15%);
        }
        &:focus {
            color: darken($warning, 20%);
        }
    }
    &.text-info {
        &:hover {
            color: darken($info, 15%);
        }
        &:focus {
            color: darken($info, 20%);
        }
    }
    &.text-light {
        &:hover {
            color: darken($light, 15%);
        }
        &:focus {
            color: darken($light, 20%);
        }
    }
    &.text-dark {
        &:hover {
            color: darken($dark, 15%);
        }
        &:focus {
            color: darken($dark, 20%);
        }
    }
}

// Extended text modifiers
mark,
.mark {
    background-color: lighten($warning, 20%);
    padding: 0.2rem 0.3rem;
}

del,
.del,
s,
.s {
    text-decoration: line-through;
}

ins,
.ins,
u,
.u {
    text-decoration: underline;
}

small,
.small {
    font-size: $text-small-size;
}

strong,
.strong,
b,
.b {
    font: bolder;
}

em,
.em,
i,
.i {
    font: italic;
}

// Abbreviations
abbr {
    cursor: help;
}

.impact {
    font-size: $text-impact-size-root;
    font-weight: $text-impact-weight;

    &-1 {
        font-size: calc($text-impact-size-root - 1rem);
        font-weight: $text-impact-weight;
    }
    &-2 {
        font-size: calc($text-impact-size-root - 2rem);
        font-weight: $text-impact-weight;
    }
    &-3 {
        font-size: calc($text-impact-size-root - 3rem);
        font-weight: $text-impact-weight;
    }
    &-4 {
        font-size: calc($text-impact-size-root - 4rem);
        font-weight: $text-impact-weight;
    }
    &-5 {
        font-size: calc($text-impact-size-root - 5rem);
        font-weight: $text-impact-weight;
    }
}
